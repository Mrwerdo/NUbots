# Proper tag image creation and push to DockerHub
name: Normal Target Pushes

# Controls when the action will run.
on:
  # Triggers the workflow on push events for the main branch
  push:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Declare a new job.
  build_llvm:
    name: "Build LLVM"
    # Run the reusable workflow located at .github/workflows/build_part_of_image.yaml
    uses: mrwerdo/nubots/.github/workflows/build_part_of_image.yaml@264ca5834e27056c042d86d81c476ae33a5da30b
    # Note: a *specific version* of the workflow is being used.
    # See here for details about the bug: https://github.community/t/ref-head-in-reusable-workflows/203690/71

    # Declare inputs for reusable workflow.
    with:
      # Specify which stage in the Dockerfile is being built (i.e. `FROM ... AS ...`)
      target: llvm
      # Use the following images as caches from hub.docker.com.
      # {0} here is substituted with the platform (i.e. generic)
      cache_from: |
        type=registry,ref=mrwerdo/nubots:{0}-llvm
        type=registry,ref=mrwerdo/nubots:{0}
        type=inline
    secrets:
      docker_hub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKERHUB_PASSWORD }}

  # Declare another job.
  build_intel_graphics_compiler_and_compute_runtime:
    name: "Build Intel Graphics Compiler and Compute Runtime"
    # Run the reusable workflow.
    uses: mrwerdo/nubots/.github/workflows/build_part_of_image.yaml@264ca5834e27056c042d86d81c476ae33a5da30b
    # Wait for the following jobs to complete.
    needs: build_llvm
    # Declare inputs for the reusable workflow.
    with:
      target: intel-graphics-compiler-and-compute-runtime
      # Use the following images as caches from hub.docker.com. Notice how llvm is also listed.
      # {0} here is substituted with the platform (i.e. generic)
      cache_from: |
        type=registry,ref=mrwerdo/nubots:{0}-llvm
        type=registry,ref=mrwerdo/nubots:{0}-intel-graphics-compiler-and-compute-runtime
        type=registry,ref=mrwerdo/nubots:{0}
        type=inline
    secrets:
      docker_hub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKERHUB_PASSWORD }}

  build_openblas:
    name: "Build OpenBLAS"
    uses: mrwerdo/nubots/.github/workflows/build_part_of_image.yaml@264ca5834e27056c042d86d81c476ae33a5da30b
    with:
      target: openblas
      # {0} here is substituted with the platform (i.e. generic)
      cache_from: |
        type=registry,ref=mrwerdo/nubots:{0}-openblas
        type=registry,ref=mrwerdo/nubots:{0}
        type=inline
    secrets:
      docker_hub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKERHUB_PASSWORD }}

  build_other_dependencies:
    name: "Build Other Dependencies"
    uses: mrwerdo/nubots/.github/workflows/build_part_of_image.yaml@264ca5834e27056c042d86d81c476ae33a5da30b
    with:
      target: other-dependencies
      # {0} here is substituted with the platform (i.e. generic)
      cache_from: |
        type=registry,ref=mrwerdo/nubots:{0}-other-dependencies
        type=registry,ref=mrwerdo/nubots:{0}
        type=inline
    secrets:
      docker_hub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKERHUB_PASSWORD }}

  # Build the docker image.
  build_docker:
    name: "Build Docker Image"
    uses: mrwerdo/nubots/.github/workflows/build_part_of_image.yaml@264ca5834e27056c042d86d81c476ae33a5da30b
    # Wait for previous jobs to finish before building the final image.
    needs:
      - build_llvm
      - build_intel_graphics_compiler_and_compute_runtime
      - build_openblas
      - build_other_dependencies
    with:
      # Build the final-image stage.
      target: final-image
      # Use the following images as caches from hub.docker.com.
      # {0} here is substituted with the platform (i.e. generic)
      cache_from: |
        type=registry,ref=mrwerdo/nubots:{0}-intel-graphics-compiler-and-compute-runtime
        type=registry,ref=mrwerdo/nubots:{0}-llvm
        type=registry,ref=mrwerdo/nubots:{0}-openblas
        type=registry,ref=mrwerdo/nubots:{0}-other-dependencies
        type=registry,ref=mrwerdo/nubots:{0}
        type=inline
    secrets:
      docker_hub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKERHUB_PASSWORD }}

  # Build the codebase
  build_nubots:
    name: "Build and test NUbots"

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Wait until the image is built.
    needs: build_docker

    strategy:
      matrix:
        platform: ["generic", "nuc8i7beh", "nuc7i7bnh"]

    # Run on the container we just built
    container:
      image: mrwerdo/nubots:${{ matrix.platform }}
      options: --user 0:0

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Cancels previously running jobs for this workflow
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.9.1

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Prepare Build Directory
        run: mkdir -p ../build

      - name: Configure the code
        run: ./b configure -- -DBUILD_TESTS=ON -DCI_BUILD=ON

      - name: Build the code
        run: ./b build

      - name: Test the code
        run: ./b tests run
